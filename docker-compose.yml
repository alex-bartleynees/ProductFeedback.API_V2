services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: mssql2022
    user: root
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD}
    ports:
      - 1433:1433
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools18/bin/sqlcmd",
          "-Usa",
          "-P${SQL_PASSWORD}",
          "-C",
          "-Q",
          "select 1",
        ]
      interval: 1s
      retries: 20

  dotnet-web-api:
    build:
      context: .
    container_name: minimalapiapp
    image: creativefree/product-feedback-api:latest
    ports:
      - 5185:5185
    environment:
      ASPNETCORE_HTTP_PORTS: 5185
      ConnectionStrings__SuggestionDBConnectionString: ${SQL_CONNECTION_STRING}
      ConnectionStrings__OTLP_Endpoint: "http://otel-collector:4317"
    depends_on:
      sqlserver:
        condition: service_healthy
        restart: true
    develop:
      watch:
        - action: rebuild
          path: ./
          target: /usr/app/

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.0
    volumes:
      - ./otel-config.yml:/etc/otel/config.yml
      - ./log:/log/otel
    command: --config /etc/otel/config.yml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
    ports:
      - "8889:8889" # Prometheus metrics exporter (scrape endpoint)
      - "13133:13133" # health_check extension
      - "55679:55679" # ZPages extension
      - "4317:4317" # OTLP Receiver
    depends_on:
      - jaeger
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"

  prometheus:
    image: prom/prometheus:v2.53.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"

  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki:2.7.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

volumes:
  mssql-data:
  grafana-data:
  prometheus-data:
