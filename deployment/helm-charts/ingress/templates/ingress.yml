apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }} 
  namespace: {{ .Values.ingress.namespace }}
  annotations:
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.ingress.maxBodySize | default "8m" | quote }}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: {{ .Values.ingress.timeout.connect | default "5" | quote }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: {{ .Values.ingress.timeout.read | default "60" | quote }}
    nginx.ingress.kubernetes.io/proxy-send-timeout: {{ .Values.ingress.timeout.send | default "60" | quote }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  {{- if .Values.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.domain }}
      secretName: {{ .Values.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.domain }}
      http:
        paths:
     {{- range .Values.ingress.services }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ .serviceName }}
                port:
                  number: {{ .servicePort }}
            {{- if .annotations }}
            annotations:
              {{- range $key, $value := .annotations }}
              {{ $key }}: {{ $value | quote }}
              {{- end }}
            {{- end }}
    {{- end }}
