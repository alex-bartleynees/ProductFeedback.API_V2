---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
spec:
  selector:
    app: postgres-db # matches the labels in your StatefulSet
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP # or ClusterIP/NodePort depending on your needs
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-db # name of the StatefulSet workload, the SQL Server instance name is derived from this. We suggest to keep this name same as the .spec.template.metadata.labels, .spec.selector.matchLabels and .spec.serviceName to avoid confusion.
spec:
  serviceName: "postgres-db" # serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set.
  replicas: 1 # only one pod, with one SQL Server instance deployed.
  selector:
    matchLabels:
      app: postgres-db # this has to be the same as .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: postgres-db # this has to be the same as .spec.selector.matchLabels, as documented [here](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/):
    spec:
      securityContext:
        fsGroup: 10001
      containers:
        - name: postgres-db # container name within the pod.
          image: postgres:17
          resources:
            requests:
              memory: "2Gi"
              cpu: "0.5"
            limits:
              memory: "3Gi"
              cpu: "1"
          ports:
            - containerPort: 5432
              name: tcpsql
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: pgdata
              mountPath: "/data/pgdata"
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: openebs-hostpath
        resources:
          requests:
            storage: 8Gi

